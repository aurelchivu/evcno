#Optimiser Related
spring.application.name=evcno-write
spring.profiles.active=dev
server.port=8080

# Spring and Axon Cache Config
cache.type=${CACHE_TYPE:IN_MEMORY}

# Axon Config
axon.axonserver.servers=${AXON_SERVER_HOST:localhost}:${AXONSERVER_PORT2_HOST:8124}
axon.aggregate.snapshot.threshold=${AXON_AGGREGATE_SNAPSHOT_THRESHOLD:1}
axon.metrics.micrometer.dimensional=${AXON_METRICS_MICROMETER_DIMENSIONAL:true}

# Axon Serializer Config
axon.serializer.general=${AXON_SERIALIZER_GENERAL:xstream}
axon.serializer.events=${AXON_SERIALIZER_EVENTS:xstream}
axon.serializer.messages=${AXON_SERIALIZER_MESSAGES:xstream}

# Logging Config
logging.level.org.axonframework.axonserver.connector.command.AxonServerCommandBus=${LOGGING_LEVEL_ORG_AXONFRAMEWORK_AXONSERVER_CONNECTOR_COMMAND_AXONSERVERCOMMANDBUS:DEBUG}
logging.level.org.axonframework.axonserver.connector.query.AxonServerQueryBus=${LOGGING_LEVEL_ORG_AXONFRAMEWORK_AXONSERVER_CONNECTOR_QUERY_AXONSERVERQUERYBUS:DEBUG}
logging.level.org.axonframework.axonserver.connector.event.axon.AxonServerEventStore=${LOGGING_LEVEL_ORG_AXONFRAMEWORK_AXONSERVER_CONNECTOR_EVENT_AXON_AXONSERVEREVENTSTORE:DEBUG}

#Kafka config
spring.kafka.security.protocol=PLAINTEXT
spring.cloud.stream.bindings.dataSupplier-out-0.destination=data-stream-topic
spring.cloud.stream.bindings.dataSupplier-out-0.producer.useNativeEncoding=true
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
