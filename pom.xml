<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.5</version>
  </parent>

  <groupId>com.optimiser</groupId>
  <artifactId>evcno-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>evcno</name>
  <description>evcno-parent</description>
  <packaging>pom</packaging>

  <modules>
    <module>evcno-write</module>
    <module>evcno-published-language</module>
    <module>evcno-read</module>
  </modules>

  <properties>
    <java.version>21</java.version>
    <company.name>Evcno</company.name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Maven Related -->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>

    <!-- Spring Related -->
    <spring-boot.version>3.2.5</spring-boot.version>
    <spring-boot.maven.plugin.version>3.2.5</spring-boot.maven.plugin.version>
    <spring-boot-starter-webflux.version>3.2.5</spring-boot-starter-webflux.version>
    <spring-kafka.version>3.1.4</spring-kafka.version>
    <stream-binder-kafka.version>4.0.4</stream-binder-kafka.version>

    <!-- Miscellaneous -->
    <lombok.version>1.18.32</lombok.version>
    <reactor-core.version>3.6.5</reactor-core.version>
    <axon.version>4.9.3</axon.version>
    <commons-chain.version>1.2</commons-chain.version>
    <commons-io.version>2.16.1</commons-io.version>
    <swagger.version>2.2.21</swagger.version>
    <jakarta-validation.version>3.1.0-M2</jakarta-validation.version>
    <jackson-module-parameter-names.version>2.17.0</jackson-module-parameter-names.version>
    <apache-commons-lang3.version>3.14.0</apache-commons-lang3.version>
    <spotless.version>2.43.0</spotless.version>
    <google-java-format.version>1.22.0</google-java-format.version>
    <git-build-hook-maven-plugin.version>3.4.1</git-build-hook-maven-plugin.version>
    <avro-maven-plugin.version>1.11.3</avro-maven-plugin.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <mapstruct-processor.version>1.5.5.Final</mapstruct-processor.version>
    <hibernate-validator.version>8.0.1.Final</hibernate-validator.version>

    <!-- Avro Serialization -->
    <kafka-avro-serializer.version>7.6.1</kafka-avro-serializer.version>
    <avro.version>1.11.3</avro.version>
    <confluent-common-config.version>7.6.1</confluent-common-config.version>

    <!-- Persistence Related -->
    <liquibase.version>4.24.0</liquibase.version>
    <postgresql.version>42.6.0</postgresql.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Spring Boot Related -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-webflux</artifactId>
        <version>${spring-boot-starter-webflux.version}</version>
      </dependency>
      <dependency>
        <groupId>org.axonframework</groupId>
        <artifactId>axon-spring-boot-starter</artifactId>
        <version>${axon.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka</artifactId>
        <version>${spring-kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <version>${spring-boot.version}</version>
        <scope>runtime</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-validation</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <!-- Spring Cloud Stream with Kafka -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        <version>${stream-binder-kafka.version}</version>
      </dependency>

      <!-- Persistence Related -->
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>

      <!-- Miscellaneous -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-core</artifactId>
        <version>${reactor-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.axonframework</groupId>
        <artifactId>axon-modelling</artifactId>
        <version>${axon.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-chain</groupId>
        <artifactId>commons-chain</artifactId>
        <version>${commons-chain.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.validation</groupId>
        <artifactId>jakarta.validation-api</artifactId>
        <version>${jakarta-validation.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-parameter-names</artifactId>
        <version>${jackson-module-parameter-names.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${apache-commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct-processor.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>

      <!-- Avro Serialization -->
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-avro-serializer</artifactId>
        <version>${kafka-avro-serializer.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>common-config</artifactId>
        <version>${confluent-common-config.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>{spring-boot.maven.plugin.version}</version>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <configuration>
            <!-- optional: limit format enforcement to just the files changed by this feature branch -->
            <!-- ratchetFrom>origin/master</ratchetFrom -->
            <encoding>UTF-8</encoding>
            <!-- define a language-specific format -->
            <java>
              <!-- no need to specify files, inferred automatically, but you can if you want -->

              <!-- apply a specific flavor of google-java-format and reflow long strings -->
              <googleJavaFormat>
                <version>${google-java-format.version}</version>
                <style>AOSP</style>
                <reflowLongStrings>true</reflowLongStrings>
              </googleJavaFormat>

              <!-- make sure every file has the following copyright header.
                optionally, Spotless can set copyright years by digging
                through git history (see "license" section below) -->
              <licenseHeader>
                <content>/* ${company.name} (C)$YEAR */
                </content>  <!-- or <file>${project.basedir}/license-header</file> -->
              </licenseHeader>
            </java>
            <sql>
              <includes>
                <include>**/*.sql</include>
              </includes>
              <dbeaver/>
            </sql>
            <json>
              <includes>    <!-- You have to set the target manually -->
                <include>**/*.json</include>
              </includes>
              <gson>
                <indentSpaces>2
                </indentSpaces>
                <sortByKeys>false
                </sortByKeys>
              </gson>
            </json>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
            <execution>
              <id>apply</id>
              <phase>process-classes</phase>
              <goals>
                <goal>apply</goal>
              </goals>
            </execution>
          </executions>
          <version>${spotless.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <includes>
              <include>**/*Test.class</include>
              <include>**/*IT*.java</include>
            </includes>
            <testSourceDirectory>src/test/java/</testSourceDirectory>

            <forkCount>3</forkCount>
            <reuseForks>true</reuseForks>
            <argLine>@{argLine} -Xmx1024m</argLine>
          </configuration>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro-maven-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
</project>
